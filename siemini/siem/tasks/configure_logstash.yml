- name: Ensure Logstash pipilines directory exists
  file:
    path: "{{ ls_pipelines_dir }}" 
    state: directory
    owner: "{{ ansible_user }}"
    group: root

- name: Ensure pipelines.yml exists (donâ€™t overwrite if present)
  ansible.builtin.copy:
    dest: "{{ ls_dir }}/config/pipelines.yml"
    content: ""
    force: false
    owner: "{{ ansible_user }}"
    mode: "0644"

- name: Ensure apache logs are handled
  block:
    - name: Create pipeline for apache_access
      ansible.builtin.blockinfile:
        path: "{{ ls_dir }}/config/pipelines.yml"
        marker: "# {mark} APACHE PIPELINE"
        insertafter: EOF
        block: |
          - pipeline.id: apache_syslog
            path.config: "{{ ls_pipelines_dir }}/apache_access.conf"

    - name: Ensure sincedb dir exists (apache)
      ansible.builtin.file:
        path: "{{ ls_dir }}/data/sincedb"
        state: directory
        owner: "{{ ansible_user }}"
        group: root
        mode: "0750"

    - name: Ensure sincedb file exists (apache)
      ansible.builtin.file:
        path: "{{ ls_dir }}/data/sincedb/apache_access"
        state: touch
        owner: "{{ ansible_user }}"
        group: root
        mode: "0640"

    - name: Logstash apache logs configuration
      ansible.builtin.template:
        dest: "{{ ls_pipelines_dir }}/apache_access.conf"
        src: templates/apache_access.conf.j2

    - name: Set password from environment (apache)
      ansible.builtin.shell: |
        . {{ es_dir }}/config/.env
        sed -i "s/ELASTIC_PASSWORD/$ES_PASSWORD/g" {{ ls_pipelines_dir }}/apache_access.conf
      args:
        executable: /bin/bash
  notify: Restart Logstash

- name: Ensure Snort alerts are handled
  block:
    - name: Create pipeline for snort alerts
      ansible.builtin.blockinfile:
        path: "{{ ls_dir }}/config/pipelines.yml"
        marker: "# {mark} SNORT PIPELINE"
        insertafter: EOF
        block: |
          - pipeline.id: snort_alerts
            path.config: "{{ ls_pipelines_dir }}/snort_alerts.conf"

    - name: Logstash snort alerts configuration
      ansible.builtin.template:
        dest: "{{ ls_pipelines_dir }}/snort_alerts.conf"
        src: templates/snort_alerts.conf.j2

    - name: Set password from environment (snort)
      ansible.builtin.shell: |
        . {{ es_dir }}/config/.env
        sed -i "s/ELASTIC_PASSWORD/$ES_PASSWORD/g" {{ ls_pipelines_dir }}/snort_alerts.conf
      args:
        executable: /bin/bash
  notify: Restart Logstash
