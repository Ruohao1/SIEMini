input {
  file {
    path => "/var/log/snort/snort.alert.fast"    
    start_position => "beginning"
  }
}

filter {
  # Identify dataset/module
  mutate {
    add_field => {
      "[event][dataset]" => "snort.alert"
      "[event][module]"  => "snort"
      "[observer][vendor]" => "Snort"
      "[event][kind]"    => "alert"
      "[event][category]" => "intrusion_detection"
    }
  }

  # Example:
  # 10/23-00:28:11.350542  [] [1:100000187:2] COMMUNITY WEB-PHP XSS attempt [] [Classification: Web Application Attack] [Priority: 1] {TCP} 192.168.2.49:54716 -> 192.168.2.56:80
  grok {
    match => {
      "message" => [
        "^%{MONTHNUM:snort.mm}/%{MONTHDAY:snort.dd}-%{TIME:snort.time}\s+\[\]\s+\[%{NUMBER:snort.gid:int}:%{NUMBER:snort.sid:int}:%{NUMBER:snort.rev:int}\]\s+%{DATA:[rule][name]}\s+\[\]\s+\[Classification:\s*%{DATA:[rule][category]}\]\s+\[Priority:\s*%{NUMBER:[event][severity]:int}\]\s+\{\s*%{WORD:[network][transport]}\s*\}\s+%{IP:[source][ip]}:%{NUMBER:[source][port]:int}\s+->\s+%{IP:[destination][ip]}:%{NUMBER:[destination][port]:int}$"
      ]
    }
    remove_field => ["message"]
    tag_on_failure => ["_grokparsefailure_snort"]
  }

  mutate {
    add_field => { "rule.category" => "%{[rule][category]}" }
  }

  mutate {
    add_field => { "[rule][id]" => "%{[snort][gid]}:%{[snort][sid]}:%{[snort][rev]}" }
    lowercase => [ "[network][transport]" ]   # TCP/UDP -> tcp/udp
  }

  # Parse timestamp (Snort fast.log has no year; we assume current year + local TZ)
  # Pattern: MM/dd-HH:mm:ss.SSSSSS  (microseconds ok; extra digits are fine)
  mutate {
    add_field => { "snort.compact_ts" => "%{[snort][mm]}/%{[snort][dd]}-%{[snort][time]}" }
  }
  date {
    match    => [ "snort.compact_ts", "MM/dd-HH:mm:ss.SSSSSS", "MM/dd-HH:mm:ss.SSS" ]
    timezone => "America/Toronto"
    target   => "@timestamp"
  }

  # Optional enrichment
  geoip { source => "[source][ip]" target => "[source][geo]" }

  # Housekeeping
  mutate { remove_field => ["snort.mm","snort.dd","snort.time","snort.compact_ts"] }
}

output {
  elasticsearch {
    hosts => ["https://localhost:9200"]
    user  => "elastic"
    password => "ELASTIC_PASSWORD"
    ssl_enabled => true
    ssl_certificate_authorities => "/opt/elasticsearch/config/certs/http_ca.crt"
    index => "snort-alerts-%{+YYYY.MM.dd}"
  }

  stdout { codec => rubydebug }
}
